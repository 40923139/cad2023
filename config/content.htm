<h1>About</h1>
<p><span>個人網站：</span></p>
<p><span> </span><a class="Link--inTextBlock" href="https://40923139.github.io/cad2023/">https://40923139.github.io/cad2023/</a></p>
<p>小組網站：</p>
<p><a href="https://40923127-1.github.io/cad2023_ag6/" rel="nofollow">https://40923127-1.github.io/cad2023_ag6/</a></p>
<h1>link</h1>
<h2>Creo</h2>
<p><a href="https://apps.ptc.com/schools/references/install_creo10_unistudent_standard.pdf">Creo 學生版序號</a></p>
<p><a href="https://support.ptc.com/appserver/auth/it/esd/academicFree.jsp">Creo 下載點</a></p>
<h1>Week</h1>
<h2>01</h2>
<h2>02</h2>
<h2>03</h2>
<h2>04</h2>
<h2>05</h2>
<h2>06</h2>
<h2>07</h2>
<h2>08</h2>
<h3>Creo 安裝</h3>
<p>1.使用下方網址註冊PTC教育版帳號</p>
<p><a href="https://support.ptc.com/appserver/common/account/createAccount.jsp?tab=student">https://support.ptc.com/appserver/common/account/createAccount.jsp?tab=student</a></p>
<p><span>2.註冊完成後點擊下載Creo 10，約5.9GB</span></p>
<p><span>3.解壓縮後點擊setup開啟安裝助理</span></p>
<p><span>4.授權合約：點擊接受授權並勾選方塊</span></p>
<p><span>5.點擊「節點鎖定授權產生」</span></p>
<p>6.輸入「BK100908EDSTUDENTEDUNI」後點擊安裝授權。</p>
<p>   此時會要求輸入帳號密碼，輸入先前註冊的PTC教育帳號</p>
<p><span>7.選擇安裝位置</span></p>
<p><span>8.選擇欲安裝內容</span></p>
<p><span>9.安裝完成並開啟</span></p>
<h2>09</h2>
<h2>10</h2>
<h2>11</h2>
<h2>12</h2>
<h2>13</h2>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETnGCokBJEBDiHCDLWwxy8YBjtgKonVWSh1jrh3jz7Wong?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=Uwcy3c">w13_2b_1.mp4</a></span><span> </span>(說明如何利用 ChatGPT 協助利用 Python 程式列出各組學員座位表)</p>
<p>接下來請根據下列步驟測試如何在 CoppeliaSim 場景中利用感測器偵測, 並對特定物件施力:</p>
<p>第一步:</p>
<p>下載支援 IPv6 網路協定版本<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a><span> </span>(需要下載密碼)</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>,<span> </span><a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p>
<p>第二步:</p>
<p>與 ChatGPT 對話時, 可以利用 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVV3NaesdDdNqcoD3xAo96gBqGG4gEJFPknOIt7EfofGlg?e=OfQ4qo">zmqRemoteAPI Python for cad2023.7z</a><span> (需要下載密碼) 中的 ZMQ Remote API Python 程式作為 Template, 探討如何設置感測器, 在正確時間對剛球施力.</span></p>
<p><span>第三步:</span></p>
<p><span>實際操作 CoppeliaSim 鋼球永動模擬器電腦輔助設計三個階段: 建立模型零組件 - 轉入機電模擬系統 - 根據實際物理條件設置機電系統. </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ERR-gLqBjsVGnW2-VYSvtl4BXpNVbocA2nWvmeJyXkyJqw?e=KX2Pw0">perpetual_motion_simulator_project_cad2023.7z 下載</a><span> (需要密碼)</span></p>
<p><span>請各組學員將上列三個步驟的執行, 以 Wink 操作影片放入個人與分組網站中的 w13 頁面.</span></p>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYTdI7L4kI5ApCWjsCQowHMBybVYL3E2ngKl_5KDaQb_VQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=JLlhSo">w13_2b_2.mp4</a></span><span> </span>(有關上列操作步驟的說明)</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EaCzkiH3xOJBjGeRQmf7F8cBuSE_O3rneWodiUj_awBEoQ?e=sgrIVu">triangle_solvespace_coppeliasim_ex1.7z</a><span> </span>(利用 Solvespace 建立 V 形軌道, 希望建立較簡單的鋼球永動模擬系統)</span></p>
<p><span>參考資料:</span></p>
<p><a href="https://wikis.utexas.edu/display/RMD/Home+-+Robot+Mechanisms+Design">https://wikis.utexas.edu/display/RMD/Home+-+Robot+Mechanisms+Design</a> </p>
<h2>14</h2>
<p><span>讓鋼球直接在兩個三角形斜面上進行永動模擬</span></p>
<div class="winkVideoContainerClass"><video class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="123" height="630" width="1008">
<source src="./../downloads/triangle.mp4" type="video/mp4"/></video></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VHn6MegG0aY?si=nY7j7JYtRtJDHazP" title="YouTube video player" width="560"></iframe></p>
<p><span></span></p>
<h2>15</h2>
<p><span>操作考試</span>: 請利用自選的電腦輔助設計套件建立<span> </span><a href="https://mde.tw/cadnote/content/pms.html">https://mde.tw/cadnote/content/pms.html</a>  中的零組件 (尺寸與操控內容請自訂), 並加入感測器與適當的設計元件或機構, 說明預計如何令其在接上外部電源後, 能夠讓系統中的鋼球在軌道上進行永動模擬.</p>
<p>完成零組件與可行系統設計後, 請將零組件轉入 CoppeliaSim 建立模擬場景, 並在分組中自選另一名組員, 經過彼此討論後, 請利用 ZMQ remote API Python 程式互相控制對方的永動模擬場景, 以便完成兩人一組的兩則永動機模擬操作 (若找不到協同對象, 請自行用所分配到的 IPv6 位址進行控制模擬).</p>
<p>完成上述兩人一組的現場操作考試後, 請利用 Wink 製作 MP4 操作影片, 說明從零組件繪圖至完成互動控制模擬後的各階段細節, 並將上述各項內容放入個人倉儲與網站 (頁面標題請用第一階設定, 名稱為 exam).</p>
<p>step1: 基本零組件設計繪圖.</p>
<p>step2: 施力機構設計, 納入軌道下方控制盒中.</p>
<p>step3: 將軌道、鋼球與簡化後的控制盒輸入 CoppeliaSim.</p>
<p>step4: 配合控制系統設計, 納入感測器與施力機構或系統.</p>
<p>step5: 在 localhost 以 IPv6 ZMQ remote API Python 程式, 配合感測器作動對鋼球施力.</p>
<p>step6: 跨網路對協同組員的場景進行控制模擬.</p>
<p><a href="https://youtu.be/O-FKcK0vzgY">https://youtu.be/O-FKcK0vzgY</a></p>
<p>截至 2023.12.22 Replit 仍可用來維護 Github 倉儲中的對應網站內容, 且可透過下列 html 將 Repl 嵌入網頁中:</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_725484">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">&lt;</code><code class="html keyword">iframe</code> <code class="html color1">frameborder</code><code class="html plain">=</code><code class="html string">"0"</code> <code class="html color1">width</code><code class="html plain">=</code><code class="html string">"100%"</code> <code class="html color1">height</code><code class="html plain">=</code><code class="html string">"400"</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"https://replit.com/@wcms/cadnote?embed=true"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">iframe</code><code class="html plain">&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><span>例如要查詢埠號 9210 埠號的使用情形, 指令為 </span><span>lsof -i :9210, 其中 ls 為 list, of 為 open file, -i 中的 i 為 internet, :9210 表示要求列出與 port 9210 有關 internet 使用相關的資料.</span></p>
<p>利用 s.cycu.org 維護 github.com 上的倉儲與網站內容的說明在: <a href="https://mde.tw/cadnote/content/w8.html">https://mde.tw/cadnote/content/w8.html</a> </p>
<h1>W12</h1>
<p>w12 開始將在各班上課時段驗證各學員的下列操作項目, 每一位學員必須在現場利用 Wink 建立操作過程影片, 並逐頁加上說明, 推向個人的 Github Pages 網站後, 才算完成.</p>
<p>操作項目, 以下操作請以 H1 格式頁面標題為<span> </span><span>w12</span><span> </span>建立, 抄錄題目內容後, 各項目分別以 H2 格式頁面進行排列:</p>
<ol>
<li>(標題為"<span>網路設定</span>") - 在電腦輔助設計室中使用 Windows 11 電腦, 該如何進行網路設定, 以便能夠同時對 Github 與 s.cycu.org 上的個人與分組倉儲進行改版? 請取各階段操作畫面並加上說明後, 製作為示範影片放入標題為"網路設定"的頁面中.</li>
<li>(標題為"<span>零組件繪圖</span>") - 利用各學員被該組指定的 CAD (包括 Onshape、Solid Edge、SolidWorks、NX、Inventor 與 Fusion 360), 以 Wink 擷取各套件的登入、安裝、開啟、零件繪圖、組件繪圖以及轉出 STL 零組件檔案過程, 拍攝為導引說明影片後, 放入個人 Github Pages 網站中的"零組件繪圖"頁面中.</li>
<li>(標題為"<span>系統模擬</span>") - 請將專案一的零組件轉入 CoppeliaSim 後, 根據鋼球從圓形平台落下後隨著軌道滑行的操作過程, 各頁加入說明後製作成示範影片, 並放入"系統模擬"頁面中.</li>
</ol>
<h2>網路設定</h2>
<div class="winkVideoContainerClass"><video class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="123" height="630" width="1008">
<source src="./../downloads/netset1.mp4" type="video/mp4"/></video></div>
<h2>零組件繪圖</h2>
<p><span></span></p>
<div class="winkVideoContainerClass"><video class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="123" height="630" width="1008">
<source src="./../downloads/creo install.mp4" type="video/mp4"/></video></div>
</div>
</div>
<p><!-- 存擋表單結束 --></p>
<h2>系統模擬</h2>
<pre class="brush:py;auto-links:false;toolbar:false;tab-size:5" contenteditable="false"># 以下的 zmq 程式庫已經過修改, 可以在 IPv4 與 IPv6 環境下使用
# 針對 CoppeliaSim 的 zmq 延伸程式, Python 需要安裝 cbor 與 pyzmq 等兩個模組
# pip install cbor pyzmq
from zmqRemoteApi_IPv6 import RemoteAPIClient
# 由於在 zmq 程式執行時, 希望讓使用者可以透過鍵盤 (或其他電子電機訊號) 指令控制遠端的機電模擬場景
# Python 程式環境還需要安裝 keyboard 模組, pip install keyboard
import keyboard
import time
 
# 利用以下程式碼連接 CoppeliaSim remote API server
#第一個輸入變數若為 localhost 則只能控制與程式同在的場景
# 但若第一輸入變數為可連外的 IPv4 或 IPv6 address, 則可用來控制遠端電腦上的模擬場景
# 23000 為 CoppeliaSim 使用 ZMQ remote API 連線控制時內定的網路埠號
# client 與 server 的防火牆或代理主機必須讓此埠號的封包 (socket) 通過
client = RemoteAPIClient('localhost', 23000)
 
# 利用 getObject 取得場景中的 "sim" 物件參考對應值
sim = client.getObject('sim')
 
# 利用 sim 物件的 startSimulation() 方法啟動場景模擬
sim.startSimulation()
 
# 利用 getObject 取得 'marble' and 'sensor'  物件的參考對應值
marble = sim.getObject('./marble')
sensor = sim.getObject('./sensor')
# 透過變數屬性設定方法將 marble 設為 non-static, 意即具有 dynamic 特性
sim.setObjectInt32Param(marble, sim.shapeintparam_static, 0)
sim.addForceAndTorque(marble, [1, 0, 0], [0, 0, 0]) # 給球一個初始的力
 
 
# 主模擬程序
while True:
    if keyboard.is_pressed('q'):
        # 模擬執行期間, 將滑鼠停在場景, 鍵盤按下 q 可以終止模擬
        break
 
    r, dist, pt, obj, normal = sim.handleProximitySensor(sensor)
    res, dist2, point, obj2, n = sim.readProximitySensor(sensor)
    # Get the current position of the marble
    current_position1 = sim.getObjectPosition(marble, -1)
    current_position2 = sim.getObjectPosition(marble, -1)
  
 
    if res &gt; 0:
        if current_position1[0] &lt;=current_position2[0]:
            # 對鋼球質心施以一個向量力
            sim.addForceAndTorque(marble, [980, 80, 0], [0, 0, 0])
            print("加速") # 看有沒有正常加速
        time.sleep(0.1)  # 加入 0.1 秒的延遲，調整感測器的判斷頻率
 
# Stop the simulation
sim.stopSimulation()</pre>
<p><br/><br/><br/></p>
<p></p>
<div class="winkVideoContainerClass"><video class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="123" height="630" width="1008">
<source src="./../downloads/PERPETUAL MOTION.mp4" type="video/mp4"/></video></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/WAi8KiGUTm4?si=tN7oi5UCaAHL78k-" title="YouTube video player" width="560"></iframe></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>